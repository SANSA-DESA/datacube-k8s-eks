singleuser:
  extraEnv:
    DB_HOSTNAME: ${db_hostname}
    DB_USERNAME: ${db_username}
    DB_PASSWORD: ${db_password}
    DB_DATABASE: ${db_name}
    # can access public s3 bucket without providing role permission
    AWS_DEFAULT_REGION: ${region}
    AWS_NO_SIGN_REQUEST: "YES"
    AWS_S3_ENDPOINT: "s3.${region}.amazonaws.com"
hub:
  config:
    Authenticator:
      enable_auth_state: true
    CryptKeeper:
      keys:
        - ${auth_state_cryptoKey}
    JupyterHub:
      authenticator_class: generic-oauth
    GenericOAuthenticator:
      client_id: ${jhub_auth_client_id}
      client_secret: ${jhub_auth_client_secret}
      login_service: cognito
      oauth_callback_url: https://${sandbox_host_name}/oauth_callback
      authorize_url: https://${jhub_userpool_domain}.auth.${cognito_region}.amazoncognito.com/oauth2/authorize
      token_url: https://${jhub_userpool_domain}.auth.${cognito_region}.amazoncognito.com/oauth2/token
      userdata_url: https://${jhub_userpool_domain}.auth.${cognito_region}.amazoncognito.com/oauth2/userInfo
      username_key: username
  extraEnv:
    - name: COGNITO_REGION
      value: ${cognito_region}
    - name: JUPYTERHUB_USERPOOL_ID
      value: ${jhub_userpool_id}
    - name: DB_HOSTNAME
      value: ${db_hostname}
    - name: DB_USERNAME
      value: ${db_username}
    - name: DB_PASSWORD
      value: ${db_password}
    - name: DB_DATABASE
      value: ${db_name}
  cookieSecret: ${hub_cookieSecret}

proxy:
  secretToken: ${proxy_secretToken}

ingress:
  pathSuffix: '*'
  annotations:
    ingress.kubernetes.io/proxy-body-size: 64m
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/certificate-arn: "${certificate_arn}"
    alb.ingress.kubernetes.io/healthcheck-path: "/hub/health"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_302"}}'
    alb.ingress.kubernetes.io/waf-acl-id: ${waf_acl_id}
  hosts:
    - ${sandbox_host_name}
